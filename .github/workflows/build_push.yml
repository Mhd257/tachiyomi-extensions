name: CI

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/scripts/**'
      - '.github/workflows/build-push.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  CI_CHUNK_SIZE: 65
  IS_PR_CHECK: false

jobs:
  prepare:
    name: Prepare job
    runs-on: ubuntu-24.04
    outputs:
      latestCommitMessage: ${{ steps.set-env.outputs.LATEST_COMMIT_MESSAGE }}
      matrix: ${{ steps.generate-matrices.outputs.matrix }}
      delete: ${{ steps.generate-matrices.outputs.delete }}
    steps:
      - name: Checkout ${{ github.ref_name }} branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env
        id: set-env
        run: |
          echo "LATEST_COMMIT_MESSAGE<<EOF
          $(git log -1 --pretty=%B)
          EOF" >> $GITHUB_OUTPUT

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Get last successful CI commit
        id: last_successful_ci_commit
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: ${{ github.ref_name }}

      - id: generate-matrices
        name: Create output matrices
        run: |
          python ./.github/scripts/generate-build-matrices.py ${{ steps.last_successful_ci_commit.outputs.base }} Release

  build:
    name: Build extensions (${{ matrix.chunk.number }})
    needs: prepare
    runs-on: ubuntu-24.04
    if: ${{ toJson(fromJson(needs.prepare.outputs.matrix).chunk) != '[]' }}
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout ${{ github.ref_name }} branch
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ matrix.chunk.number > 1 }}

      # Signing step disabled (no signing key)
      # - name: Prepare signing key
      #   run: echo ${{ secrets.SIGNING_KEY }} | base64 -d > signingkey.jks

      - name: Build extensions (${{ matrix.chunk.number }})
        run: ./gradlew $(echo '${{ toJson(matrix.chunk.modules) }}' | jq -r 'join(" ")')

      - name: Upload APKs (${{ matrix.chunk.number }})
        uses: actions/upload-artifact@v4
        with:
          name: "individual-apks-${{ matrix.chunk.number }}"
          path: "**/*.apk"
          retention-days: 1

      - name: Clean up CI files
        run: rm -f signingkey.jks || true

  publish:
    name: Publish extension repo
    needs: [prepare, build]
    if: github.repository == 'Mhd257/tachiyomi-extensions'
    runs-on: ubuntu-24.04
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          path: ~/apk-artifacts

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Checkout ${{ github.ref_name }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          path: ${{ github.ref_name }}

      - name: Create repo artifacts
        run: |
          cd ${{ github.ref_name }}
          python ./.github/scripts/move-built-apks.py
          python ./.github/scripts/create-repo.py

      - name: Checkout repo branch
        uses: actions/checkout@v4
        with:
          repository: Mhd257/tachiyomi-repo
          token: ${{ secrets.BOT_PAT }}
          ref: repo
          path: repo

      - name: Merge repo
        run: |
          cd repo
          python ../${{ github.ref_name }}/.github/scripts/merge-repo.py '${{ needs.prepare.outputs.delete }}' '${{ github.ref_name }}/repo'

      - name: Deploy repo
        uses: EndBug/add-and-commit@v9
        with:
          message: "${{ needs.prepare.outputs.latestCommitMessage }}"
          cwd: "./repo"

      - name: Sync repo
        run: |
          cd repo
          git config user.name "Mhd257"
          git config user.email "mhd187200@gmail.com"  # Add your email here if you want
          git remote set-url origin https://github.com/Mhd257/manga-repo.git
          git fetch origin
          git reset origin/repo
          git add -A
          git commit --amend -m "${{ needs.prepare.outputs.latestCommitMessage }}" --no-sign --allow-empty || echo "No changes to commit"
          git push origin HEAD:repo --force

      - name: Purge cached index on jsDelivr
        run: |
          curl https://purge.jsdelivr.net/gh/Mhd257/manga-repo@repo/index.min.json
